/*
 * This file was automatically generated by EvoSuite
 * Fri May 24 15:26:34 GMT 2019
 */

package com.example.hellosustechbackend.web;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.example.hellosustechbackend.filestorage.FileStorage;
import com.example.hellosustechbackend.service.UploadService;
import com.example.hellosustechbackend.status.Status;
import com.example.hellosustechbackend.web.UploadFileAPI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.springframework.ui.Model;
import org.springframework.web.multipart.MultipartFile;


public class UploadFileAPI_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UploadFileAPI uploadFileAPI0 = new UploadFileAPI();
      FileStorage fileStorage0 = mock(FileStorage.class, new ViolatedAssumptionAnswer());
      Injector.inject(uploadFileAPI0, (Class<?>) UploadFileAPI.class, "fileStorage", (Object) fileStorage0);
      UploadService uploadService0 = mock(UploadService.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(uploadService0).readConsole(anyString());
      Injector.inject(uploadFileAPI0, (Class<?>) UploadFileAPI.class, "uploadService", (Object) uploadService0);
      Injector.validateBean(uploadFileAPI0, (Class<?>) UploadFileAPI.class);
      MultipartFile multipartFile0 = mock(MultipartFile.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null).when(multipartFile0).getOriginalFilename();
      Model model0 = mock(Model.class, new ViolatedAssumptionAnswer());
      doReturn((Model) null).when(model0).addAttribute(anyString() , any());
      Status status0 = uploadFileAPI0.uploadMultipartFile(multipartFile0, model0);
      assertTrue(status0.isResult());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UploadFileAPI uploadFileAPI0 = new UploadFileAPI();
      FileStorage fileStorage0 = mock(FileStorage.class, new ViolatedAssumptionAnswer());
      Injector.inject(uploadFileAPI0, (Class<?>) UploadFileAPI.class, "fileStorage", (Object) fileStorage0);
      UploadService uploadService0 = mock(UploadService.class, new ViolatedAssumptionAnswer());
      Injector.inject(uploadFileAPI0, (Class<?>) UploadFileAPI.class, "uploadService", (Object) uploadService0);
      Injector.validateBean(uploadFileAPI0, (Class<?>) UploadFileAPI.class);
      Model model0 = mock(Model.class, new ViolatedAssumptionAnswer());
      Status status0 = uploadFileAPI0.uploadMultipartFile((MultipartFile) null, model0);
      assertEquals("Upload fail", status0.getDescription());
  }
}
